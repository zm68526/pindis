{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grant\\\\OneDrive\\\\Documents\\\\GitHub\\\\pindis\\\\React Project\\\\project\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Login from './components/Login'; // Assuming Login is the correct component name\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage(props) {\n  _s();\n  const navigate = useNavigate();\n  const userLoginHandler = async function (userData) {\n    try {\n      // Assuming props.loginHandler is a function that performs the login logic\n      await props.loginHandler(userData);\n\n      // Redirect to /loggedin upon successful login\n      navigate('/loggedin');\n    } catch (error) {\n      // Handle any login errors if needed\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      onLoginItem: userLoginHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Login","useNavigate","jsxDEV","_jsxDEV","LoginPage","props","_s","navigate","userLoginHandler","userData","loginHandler","error","console","children","onLoginItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/grant/OneDrive/Documents/GitHub/pindis/React Project/project/src/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport Login from './components/Login'; // Assuming Login is the correct component name\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LoginPage(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const userLoginHandler = async function(userData) {\r\n    try {\r\n      // Assuming props.loginHandler is a function that performs the login logic\r\n      await props.loginHandler(userData);\r\n\r\n      // Redirect to /loggedin upon successful login\r\n      navigate('/loggedin');\r\n    } catch (error) {\r\n      // Handle any login errors if needed\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Assuming the correct prop name is onLoginItem */}\r\n      <Login onLoginItem={userLoginHandler} />\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,gBAAgB,GAAG,eAAAA,CAAeC,QAAQ,EAAE;IAChD,IAAI;MACF;MACA,MAAMJ,KAAK,CAACK,YAAY,CAACD,QAAQ,CAAC;;MAElC;MACAF,QAAQ,CAAC,WAAW,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,oBACER,OAAA;IAAAU,QAAA,eAEEV,OAAA,CAACH,KAAK;MAACc,WAAW,EAAEN;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACZ,EAAA,CAtBQF,SAAS;EAAA,QACCH,WAAW;AAAA;AAAAkB,EAAA,GADrBf,SAAS;AAwBlB,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}